# Build worker image (VM template)
image: Visual Studio 2017

version: 1.0.{build}-{branch}

branches:
  except:
  - gh-pages

configuration: 
- Release
#- RelWithDebInfo
- Debug

clone_folder: c:\projects\instrumentall

environment:
  matrix:
  - GENERATOR: Visual Studio 14 2015
    ARCH: Win64
#  - GENERATOR: Visual Studio 14 2015 # openCV has no pre-built for x86/vc14
  - GENERATOR: Visual Studio 15 2017
    ARCH: Win64
#  - GENERATOR: MinGW Makefiles  # poco is not compiling with this yet... (1.6.0)

init:
- call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat"
- env
- if "%GENERATOR%"=="Visual Studio 14 2015" (if "%ARCH%" == "Win64" ( call "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" x86_amd64 ) else ( call "%VS140COMNTOOLS%\..\..\VC\vcvarsall.bat" ))
- if "%GENERATOR%"=="Visual Studio 15 2017" (if "%ARCH%" == "Win64" ( call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat" ) else ( call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat" ))
- set POCO_VERSION=1.9.4
- set POCO_INSTALL_PREFIX=%PROGRAMFILES%\Poco
- set OPENCV_BASE_DIR=%PROGRAMFILES%
- set OPENCV_DIR=%PROGRAMFILES%\opencv
- set OPENCV_VERSION=3.4.12
- set OPENCV_CMAKE=-DOpenCV_DIR="%OPENCV_DIR%\build" 
- if "%ARCH%"=="Win64" ( set OPENCV_DLL_PATH=build\x64) else ( set OPENCV_DLL_PATH=build\x86)
- if "%GENERATOR%"=="Visual Studio 11 2012" ( set OPENCV_DLL_PATH=%OPENCV_DLL_PATH%\vc11\bin)
- if "%GENERATOR%"=="Visual Studio 12 2013" ( set OPENCV_DLL_PATH=%OPENCV_DLL_PATH%\vc12\bin) 
- if "%GENERATOR%"=="Visual Studio 14 2015" ( set OPENCV_DLL_PATH=%OPENCV_DLL_PATH%\vc14\bin) 
- if "%GENERATOR%"=="Visual Studio 15 2017" ( set OPENCV_DLL_PATH=%OPENCV_DLL_PATH%\vc15\bin) 
- if "%GENERATOR%"=="MinGW Makefiles" ( set OPENCV_CMAKE=-Dno-opencv="true")
- set WXWIN=C:\wxWidgets-3.0.2
- set wxWidgets_LIB_DIR=%WXWIN%\lib\vc_dll
- set PATH=C:\MinGW\bin;%PATH%;%POCO_INSTALL_PREFIX%\bin;%OPENCV_DIR%\%OPENCV_DLL_PATH%;%WXWIN%;%wxWidgets_LIB_DIR%
# - set PATH=%PATH%;%ProgramFiles(x86)%\Windows Kits\10\bin\x86 # to be used if using MinGW

install:
- if "%GENERATOR%"=="MinGW Makefiles" ( set SH_COMMAND=gulash.exe ) else ( set SH_COMMAND=sh.exe )
- if "%GENERATOR%"=="MinGW Makefiles" ( move "%PROGRAMFILES%\Git\usr\bin\sh.exe" "%PROGRAMFILES%\Git\usr\bin\%SH_COMMAND%" )
- if NOT [%ARCH%] == [] ( set GENERATOR=%GENERATOR% %ARCH%)
- call %APPVEYOR_BUILD_FOLDER%\CI\appveyor\install_dependencies.bat # install poco, openCV

before_build:
    - cd %APPVEYOR_BUILD_FOLDER%
    - mkdir build
    - cd build
    - cmake --help
    - cmake -G"%GENERATOR%" .. -DPoco_DIR="%POCO_INSTALL_PREFIX%\lib\cmake\Poco" %OPENCV_CMAKE% -DwxWidgets_ROOT_DIR="%WXWIN%"  || cmake .. -DwxWidgets_LIB_DIR="%wxWidgets_LIB_DIR%"

build_script:
- env
- cmake --build . --config %CONFIGURATION%

test_script:
# - echo %PATH%
- ctest -V --build-config %CONFIGURATION%

#on_finish:
#- ps: '$blockRdp = $true; iex ((new-object net.webclient).DownloadString(''https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1''))'
